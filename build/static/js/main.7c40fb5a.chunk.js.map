{"version":3,"sources":["serviceWorker.js","server/connection.js","server/search.js","actions/index.js","reducers/index.js","containers/Language.js","components/Languages.js","containers/NavItem.js","components/Nav.js","components/Header.js","components/Footer.js","components/Posts.js","components/Modal.js","components/Archives.js","components/Page.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","host","isConnected","healthStatus","console","log","client","elasticsearch","Client","protocol","port","path","_callee","health","regenerator_default","a","wrap","_context","prev","next","cluster","sent","status","t0","error","abrupt","stop","this","initialSearch","ids","body","size","query","type","values","search","index","searchID","id","nodeWP","endpointWP","initialIDs","LanguageArray","REQUEST_PAGES","RECEIVE_PAGES","REQUEST_POSTS","RECEIVE_POSTS","REQUEST_DATA","RECEIVE_DATA","REQUEST_ID","RECEIVE_ID","DETAIL_MODAL","content","state","arguments","length","undefined","isFetching","items","action","Object","assign","pages","lastUpdated","receivedAt","posts","data","item","modalID","show","rootReducer","combineReducers","selectedLanguage","language","selectedPage","page","detailData","detailModal","pagesByLanguage","defineProperty","lang","postsByLanguage","connect","ownProps","active","dispatch","onClick","_ref","children","react_default","createElement","key","className","style","color","languages","keys","props","list","map","l","containers_Language","navigation","c","slug","substring","title","rendered","order","menu_order","slugs","nav","containers_NavItem","Link","to","Header","components_Languages","Nav","Footer","src","alt","href","fetchingPosts","post","i","j","mediaURL","_embedded","source_url","concat","acf","dangerouslySetInnerHTML","__html","subtitle","unpack","arr","Array","isArray","Modal_this","showModal","split","hasOwnProperty","unpackNames","Modal","workDetail","hideModal","doc_id","showHideClassName","source","label","catalogInfo","personName","note","noteText","parseType","_source","Archives","_this","_ref2","asyncToGenerator","mark","_callee2","dataDetail","_context2","Date","now","_x2","apply","fetchSpecificID","unpackFrontend","code","o","p","find","g","_this2","works","work","_work$_source","genre","topic","author","creatorMainAuthor","authorCode","components_Modal","Component","hits","Page","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resetPage","setNumber","0","1","2","3","4","some","e","filter","backgroundImage","fetchingPages","Header_Header","renderPage","meowPage","components_Posts","components_Archives","Footer_Footer","Routes","BrowserRouter","Switch","Route","exact","component","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","fetch","then","response","json","reduce","r","push","receivePages","receivePosts","_x","checkConnection","ReactDOM","render","document","classList","add","es","router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c40fb5a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import elasticsearch from 'elasticsearch';\n\nconst port = 9200;\n//const host = process.env.NODE_ENV === 'production' ? '142.93.23.6' : 'localhost';\nconst host = '142.93.23.6' // : 'localhost';\n\nlet isConnected = false;\nlet healthStatus = 'red';\n\nconsole.log(host);\n\nconst log = (...msgs) => {\n\tif (process.env.NODE_ENV === 'development') {\n\t\tconsole.log(...msgs)\n\t}\n};\n\nconst client = new elasticsearch.Client({\n\thost: {\n\t\tprotocol: 'http',\n\t\thost: host,\n\t\tport: port,\n\t\tpath: ''\n\t},\n\tlog: 'info' //'trace'\n});\n\nasync function checkConnection() {\n\tlog('process.env.NODE_ENV ', host);\n\twhile(!isConnected) {\n\t\tlog('Connnnnecting....');\n\t\twhile(healthStatus === 'red') {\n\t\t\tlog('awaiting green light');\n\t\t\ttry {\n\t\t\t\tconst health = await client.cluster.health({});\n\t\t\t\tlog('health: ', health);\n\t\t\t\thealthStatus = health.status;\n\t\t\t\tisConnected = true;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error('Connection yo, is failing...', err);\n\t\t\t\tisConnected = false;\n\t\t\t}\n\t\t}\n    }\n    \n    // cat module with json formatting\n    // client.cat.indices({\"format\": \"json\"}, (err, res) => {\n    //     log('cat2', res.filter(f => f.index.substring(0,4) === \"bdrc\"))\n    //     log(err)\n    // });\n\n    // HAVE A LOOK INTO THIS FOR FILTERING OBJECTS\n    // Object.filter = (obj, predicate) => \n    // Object.assign(...Object.keys(obj)\n    //                 .filter( key => predicate(obj[key]) )\n    //                 .map( key => ({ [key]: obj[key] }) ) );\n\n    // STATS MODULE to retreive indices\n    // client.indices.stats({\n    //     index: \"_all\",\n    //     level: \"indices\"\n    //  }, function(err, res) {\n    //     // res contains JSON data about indices stats\n    //     log('stats', res.indices)\n    //  });\n    \n\treturn isConnected;\n}\n\nexport { client, checkConnection, isConnected, log };","import { client, log } from './connection';\nconst initialIndex = 'frontend';\nconst type = ''; // 'data'\nconst size = 10;\n\nconst initialSearch = (ids) => {\n\t\n\tconst body = {\n\t\t\n\t\tsize: size,\n\t\tquery: {\n            ids: {\n                type: \"_doc\",\n                values: ids\n            }\n        }\n\t};\n\tlog('initial search body', body);\n\treturn client.search({index: initialIndex, type, body});\n};\n\nconst searchID = (id) => {\n\t\n\tconst body = {\n\t\t\n\t\tsize: size,\n\t\tquery: {\n            ids: {\n                type: \"_doc\",\n                values: id\n            }\n        }\n\t};\n\tlog('initial search body', body);\n\treturn client.search({index: ['bdrc_work', 'bdrc_topic', 'bdrc_person'], type, body});\n};\n\nconst textOnlyTerm = (term, catref, filterClause) => {\n\n\t// const filter = {\n\t// \tbool: { should: [ filterClause ] }\n\t// };\n\t\n\t// const multiMatchPhrase = {\n\t// \tquery: term,\n\t// \ttype: 'phrase',\n\t// \tfields: ['author*^10', 'title*^10', 'tibtext^3']\n\t// };\n\n\tconst highlight_all = {\n\t\tfields: {\n\t\t\ttibtext: {\n\t\t\t\tfragment_size: 0,\n\t\t\t\thighlight_query: {\n\t\t\t\t\tmatch_phrase: {\n\t\t\t\t\t\ttibtext: term \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tpre_tags: ['<yo>'],\n\t\tpost_tags: ['</yo>']\n\t};\n\n\tconst body = {\n\t\tquery: {\n\t\t\tterm: {\n\t\t\t\t'catref': catref\n\t\t\t}\n\t\t},\n\t\thighlight: highlight_all,\n\t\t_source: {\n\t\t\tincludes: ['tibtext']\n\t\t}\n\t\t\n\t};\n\t//console.log('the body of phrase match ', body);\n\t//const b = client.search({index, type, body});\n\t//log('logging client.search pre return ', b);\n\treturn client.search({initialIndex, type, body});\n};\n\n\nexport { initialSearch, textOnlyTerm, searchID };\n","import fetch from 'cross-fetch'\n\nimport { initialSearch, searchID } from '../server/search'\n\nconst nodeWP = 'http://206.189.71.52/'\nconst endpointWP = 'wp-json/wp/v2/'\n\nconst initialIDs = [\n    'W22677',\n    'W1GS135873',\n    'W1KG5200',\n    'W22344',\n    'W1GS135531',\n    'W1KG1132',\n    'W1KG10720',\n    'W1KG1279',\n    'W1KG14700'\n]\n\nexport const LanguageArray = [\n    'English',\n    'Mongolian',\n    'Tibetan'\n]\n\nexport const SET_LANG = 'SET_LANG';\nexport const setLanguage = language => ({\n  type: SET_LANG,\n  language\n})\n\nexport const SET_PAGE = 'SET_PAGE';\nexport const setPage = page => ({\n    type: SET_PAGE,\n    page\n})\n/* ******************************************\nPAGES\nwp pages for content pages (about, preservation)\n********************************************/\nexport const REQUEST_PAGES = 'REQUEST_PAGES';\nfunction requestPages() {\n    return {\n        type: REQUEST_PAGES\n    }\n}\n\nexport const RECEIVE_PAGES = 'RECEIVE_PAGES';\nfunction receivePages(json) {\n    return {\n        type: RECEIVE_PAGES,\n        pages: json, //.filter(child => child.acf.language === lang), //.data.children.map(child => child.data),\n        receivedAt: Date.now()\n    }\n}\n\nexport function fetchPages() {\n    return function(dispatch) {\n        dispatch(requestPages())\n        return fetch(`${nodeWP}${endpointWP}pages?_embed`)\n            .then(\n                response => response.json(),\n                error => console.log('An error ', error)    \n            )\n            .then(json => {\n                //reduce using empty array to group by language\n                return json.reduce((r, a) => {\n                    r[a.acf.language] = r[a.acf.language] || [];\n                    r[a.acf.language].push(a);\n                    return r;\n                }, []);\n            })\n            .then(json => { \n                // do NOT receivePages until there are pages!\n                dispatch(receivePages(json)) \n            })\n    }\n}\n\n/* ******************************************\nPOSTS\nwp posts for home page content\n********************************************/\nexport const REQUEST_POSTS = 'REQUEST_POSTS';\nfunction requestPosts() {\n    return {\n        type: REQUEST_POSTS\n    }\n}\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\nfunction receivePosts(json) {\n    return {\n        type: RECEIVE_POSTS,\n        posts: json, //.filter(child => child.acf.language === lang), //.data.children.map(child => child.data),\n        receivedAt: Date.now()\n    }\n}\n\nexport function fetchPosts() {\n    return function(dispatch) {\n        dispatch(requestPosts())\n        return fetch(`${nodeWP}${endpointWP}posts?_embed`)\n            .then(\n                response => response.json(),\n                error => console.log('An error ', error)    \n            )\n            .then(json => {\n                //reduce using empty array to group by language\n                return json.reduce((r, a) => {\n                    r[a.acf.language] = r[a.acf.language] || [];\n                    r[a.acf.language].push(a);\n                    return r;\n                }, []);\n            })\n            .then(json => \n                dispatch(receivePosts(json))\n            )\n    }\n}\n\n/* ******************************************\nDATA\nElasticsearch data from http://142.93.23.6:9200\n********************************************/\nexport const REQUEST_DATA = 'REQUEST_DATA';\nfunction requestData() {\n    return {\n        type: REQUEST_DATA\n    }\n}\n\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nfunction receiveData(json) {\n    return {\n        type: RECEIVE_DATA,\n        data: json, //.filter(child => child.acf.language === lang), //.data.children.map(child => child.data),\n        receivedAt: Date.now()\n    }\n}\n\nexport function fetchData() {\n    return async dispatch => {\n        dispatch(requestData())\n        try {\n            const data = await initialSearch(initialIDs)\n            return dispatch(receiveData(data))\n        } catch (error) {\n            console.error('there been error ', error)\n        }\n    }\n}\n\nexport const REQUEST_ID = 'REQUEST_ID';\nfunction requestID() {\n    return {\n        type: REQUEST_ID\n    }\n}\n\nexport const RECEIVE_ID = 'RECEIVE_ID';\nfunction receiveID(json) {\n    return {\n        type: RECEIVE_ID,\n        data: json, //.filter(child => child.acf.language === lang), //.data.children.map(child => child.data),\n        receivedAt: Date.now()\n    }\n}\n\n// return (dispatch, getState) => {\n//     const {items} = getState().otherReducer;\n\n//     dispatch(anotherAction(items));\n//   }\nexport function fetchSpecificID(doc_id) {\n    return async dispatch => {\n        \n        console.log('fetchSpecificID!', doc_id)\n        dispatch(requestID())\n        try {\n            const dataDetail = await searchID([doc_id])\n            console.log(dataDetail)\n            return dispatch(receiveID(dataDetail))\n        } catch(error) {\n            console.error('error! ', error)\n        }\n    }\n}\n\nexport const DETAIL_MODAL = 'DETAIL_MODAL';\nexport const modalDetail = (modalID, show) => ({\n    type: DETAIL_MODAL,\n    modalID: modalID,\n    show: show\n})","import { combineReducers } from 'redux';\nimport {\n    REQUEST_PAGES,\n    RECEIVE_PAGES,\n    REQUEST_POSTS,\n    RECEIVE_POSTS,\n    SET_LANG,\n    SET_PAGE,\n    LanguageArray,\n    RECEIVE_DATA,\n    REQUEST_DATA,\n    RECEIVE_ID,\n    REQUEST_ID,\n    DETAIL_MODAL\n} from '../actions';\n\nfunction content(\n    state = {\n        isFetching: false,\n        items: []\n    },\n    action\n) {\n    switch(action.type) {\n        case REQUEST_PAGES:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n        case RECEIVE_PAGES:\n            return Object.assign({}, state, {\n                isFetching: false,\n                items: action.pages,\n                lastUpdated: action.receivedAt\n            })\n        case REQUEST_POSTS:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n        case RECEIVE_POSTS:\n            return Object.assign({}, state, {\n                isFetching: false,\n                items: action.posts,\n                lastUpdated: action.receivedAt\n            })\n        case REQUEST_DATA:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n        case RECEIVE_DATA:\n            return Object.assign({}, state, {\n                isFetching: false,\n                items: action.data,\n                lastUpdated: action.receivedAt\n            })\n        case REQUEST_ID:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n        case RECEIVE_ID:\n            return Object.assign({}, state, {\n                isFetching: false,\n                item: action.data,\n                lastUpdated: action.receivedAt\n            })\n        case DETAIL_MODAL:\n            return Object.assign({}, state, {\n                modalID: action.modalID,\n                show: action.show\n            })\n        default:\n            return state;\n    }\n}\n\nfunction pagesByLanguage(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_PAGES:\n        case REQUEST_PAGES:\n            return Object.assign({}, state, {\n                    [action.lang]: content(state[action.lang], action)\n            })\n        default:\n            return state;\n    }\n}\n\nfunction pages(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_PAGES:\n        case REQUEST_PAGES:\n            return Object.assign({}, state, content(state, action))\n        default:\n            return state;\n    }\n}\n\nfunction data(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_DATA:\n        case REQUEST_DATA:\n            return Object.assign({}, state, content(state, action))\n        default:\n            return state;\n    }\n}\n\nfunction detailData(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_ID:\n        case REQUEST_ID:\n            return Object.assign({}, state, content(state, action))\n        default:\n            return state;\n    }\n}\n\nfunction posts(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_POSTS:\n        case REQUEST_POSTS:\n            return Object.assign({}, state, content(state, action))\n        default:\n            return state;\n    }\n}\n\nfunction postsByLanguage(state = {}, action) {\n    switch(action.type) {\n        case RECEIVE_POSTS:\n        case REQUEST_POSTS:\n            return Object.assign({}, state, {\n                [action.lang]: content(state[action.lang], action)\n            })\n        default:\n            return state;\n    }\n}\n\n\nconst selectedLanguage = (state = LanguageArray[0], action) => {\n    switch (action.type) {\n      case SET_LANG:\n        return action.language\n      default:\n        return state\n    }\n}\n\nfunction detailModal(state = { modalID: 0 }, action) {\n    switch(action.type) {\n        case DETAIL_MODAL:\n            return Object.assign({}, state, content(state, action))\n        default:\n            return state;\n    }\n}\n\nconst selectedPage = (state = 'home', action) => {\n    switch (action.type) {\n        case SET_PAGE:\n            return action.page\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    selectedLanguage,\n    selectedPage,\n    pages,\n    posts,\n    data,\n    detailData,\n    detailModal,\n    pagesByLanguage,\n    postsByLanguage\n});\n\nexport default rootReducer;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { setLanguage } from '../actions'\nimport { connect } from 'react-redux'\n\nconst Language = ({ active, children, onClick }) => (\n    <li\n      key={children}\n       onClick={active ? null : onClick}\n       className={active ? \"lang-active\" : \"lang\"}\n       style={active ? \n        { color: 'red', } :\n        { color: 'black', } \n        }\n    >\n     <button\n      key={children}\n      className=\"btn-lang\">\n      {children}\n    </button>\n    </li>\n)\n\nLanguage.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.selectedLanguage === state.selectedLanguage\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setLanguage(ownProps.selectedLanguage)) \n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Language)\n","import React from 'react'\nimport Language from '../containers/Language'\nimport { connect } from 'react-redux'\n\nconst Languages = (props) => {\n    const list = props.languages.map(l => {\n        return (\n            <Language key={l} selectedLanguage={l}>{l}</Language>\n        );\n    });\n    return (\n        <ul className=\"language-list\">{list}</ul>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    languages: Object.keys(state.pages.items)\n});\n\nexport default connect(mapStateToProps)(Languages)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { setPage } from '../actions'\nimport { connect } from 'react-redux'\n\nconst NavItem = ({ active, children, onClick }) => (\n    <li\n      key={children}\n       onClick={active ? null : onClick}\n       className={active ? \"nav-active\" : \"nav\"}\n       style={active ? \n        { color: 'red', } :\n        { color: 'black', } \n        }\n    >\n    <button\n      key={children}\n      className=\"btn-nav\">\n      {children}\n    </button>\n    </li>\n)\n\nNavItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.selectedPage === state.selectedPage\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => dispatch(setPage(ownProps.selectedPage)) \n  });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport NavItem from '../containers/NavItem'\n\nconst NavBar = ({ navigation }) => {\n    //console.log(navigation);\n    const slugs = navigation.map(nav => {\n        return (\n          <NavItem key={nav.slug} selectedPage={nav.match}><Link to={nav.slug}>{nav.title}</Link></NavItem>\n        );\n      });\n    return (\n\t\t<ul className=\"nav-list\">\n\t\t\t{slugs}\n\t\t</ul>\n    );\n}\n\nconst createNavigation = (pages) => {\n    return pages.map(c => {\n        return {\n          match: c.slug.substring(0,4),\n          title: c.slug.substring(0,4) ==='home' ? 'Home' : c.title.rendered,\n          slug: c.slug,\n          order: c.menu_order\n        }\n      });\n}\n\nconst mapStateToProps = (state) => ({\n    //navigation: createNavigation(state.pagesByLanguage[state.selectedLanguage])\n    navigation: createNavigation(state.pages.items[state.selectedLanguage])\n})\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\n\nimport Languages from './Languages'\nimport NavBar from './Nav'\n\nexport const Header = () => {\n    return (\n        <header id=\"header\">\n\t\t\t{/* <a href=\"#menu\">Menu</a> */}\n\t\t\t<Languages />\n            <NavBar />\n\t\t</header>\n    )\n}","import React from 'react'\n\nexport const Footer = () => {\n    return (\n        <footer id=\"footer\">\n            <div className=\"icon\">\n              <img \n                src=\"http://206.189.71.52/wp-content/uploads/2018/10/nlm-logo-no-text.png\" \n                alt=\"mongolia-logo\" />\n            </div>\n            <ul className=\"alt-icons\">\n                <li><a href=\"#1\" className=\"icon fa-twitter\"><span className=\"label\">Twitter</span></a></li>\n                <li><a href=\"#1\" className=\"icon fa-facebook\"><span className=\"label\">Facebook</span></a></li>\n                <li><a href=\"#1\" className=\"icon fa-linkedin\"><span className=\"label\">LinkedIn</span></a></li>\n                <li><a href=\"#1\" className=\"icon fa-github\"><span className=\"label\">GitHub</span></a></li>\n                <li><a href=\"#1\" className=\"icon fa-phone\"><span className=\"label\">Phone</span></a></li>\n                <li><a href=\"#1\" className=\"icon fa-envelope\"><span className=\"label\">Email</span></a></li>\n            </ul>\n            <ul className=\"menu\">\n                <li><a href=\"#1\">Terms of Use</a></li>\n                <li><a href=\"#1\">Privacy Policy</a></li>\n                <li><a href=\"#1\">Contact Us</a></li>\n            </ul>\n            <p className=\"copyright\">\n                &copy; Untitled Corp. YO. All rights reserved. ACIP.\n            </p>\n        </footer>\n    )\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Posts = ({ posts }) => {\n    if(!posts) {\n        return <div>NO POSTS</div>\n    }\n    else {\n        //console.log(posts);\n        return posts.map((post, i) => {\n        let j = i % 2 === 0 ? 1 : 3;\n        //console.log('i IS ', i)\n        let mediaURL = \"\"\n        if(post._embedded[\"wp:featuredmedia\"]) {\n            mediaURL = post._embedded[\"wp:featuredmedia\"][0].source_url || \"\"\n        }\n        if(j === 3) {\n            return (\n                <section key={i} id={i} className={`wrapper special style${j}`}>\n                    <div className=\"inner\">\n                        <section className=\"spotlights\">\n                            <section>\n                                <h2>{post.acf.title}</h2>\n                                <span className=\"image\"><img src={mediaURL} alt=\"\" /></span>\n                            </section>\n                            <section>\n                                <p dangerouslySetInnerHTML={{__html: post.content.rendered}} />\n                                <ul className=\"actions\">\n                                    <li><a href={`#${i+1}`} className=\"button\">{post.acf.subtitle}</a></li>\n                                </ul>\n                            </section>\n                        </section>\n                    </div>\n                </section>\n            )\n        }\n        return (\n            <section key={i} id={i} className={`wrapper special style${j}`}>\n                <div className=\"inner\">\n                    <section className=\"spotlights\">\n                        <section>\n                            <h2>{post.acf.title}</h2>\n                            <p dangerouslySetInnerHTML={{__html: post.content.rendered}} />\n                            <ul className=\"actions\">\n                                <li><a href={`#${i+1}`} className=\"button\">{post.acf.subtitle}</a></li>\n                            </ul>\n                        </section>\n                        <section>\n                            <span className=\"image\"><img src={mediaURL} alt=\"\" /></span>\n                            <h2>Lacus elementum</h2>\t\n                        </section>\n                    </section>\n                </div>\n            </section>\n            )\n        })\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    fetchingPosts: state.posts.isFetching,\n    selectedLanguage: state.selectedLanguage,\n    posts: state.posts.isFetching ? [] : state.posts.items[state.selectedLanguage]\n})\n\nexport default connect(mapStateToProps)(Posts)\n","import React from 'react'\n\nconst unpackNames = (arr, type) => {\n    console.log('names ', typeof(arr['rdfs:label']), arr['rdfs:label'])\n    if(Array.isArray(arr['rdfs:label'])) {\n        console.log('WTF i array', arr['rdfs:label'])\n        const a = arr['rdfs:label'].map(l => {\n            console.log('mapping', l)\n            return (\n                <p className=\"modal-text\">\n                    <span className=\"meta-italics\">({l['@language']}): </span>\n                    <span className=\"meta-title\">{l['@value']}</span>\n                </p>\n            )})\n            return (\n                <div className=\"modal-text\">\n                    <span className=\"meta-detail\">{type.split(\"Person\")[1]}: </span>\n                    {a}\n                </div>\n            )\n    } else {\n        return (\n            <p className=\"modal-text\">\n                <span className=\"meta-detail\">{type.split(\"Person\")[1]}: </span>\n                <span className=\"meta-italics\">({arr['rdfs:label']['@language']}): </span>\n                <span className=\"meta-title\">{arr['rdfs:label']['@value']}</span>\n            </p>\n        )\n    }\n\n    // return (\n    //     <p className=\"modal-text\">\n    //         <span className=\"meta-detail\">{arr.type.split(\"Person\")[1]}: </span>\n    //         <span className=\"meta-italics\">({arr['rdfs:label']['@language']}): </span>\n    //         <span className=\"meta-title\">{arr['rdfs:label']['@value']}</span>\n    //     </p>\n       \n    // )\n}\n\nconst unpack = (arr) => {\n    if(arr === null) {\n        return null\n    } else if(Array.isArray(arr)) {\n        return arr.map((a, i) => {\n            if(typeof a === 'object') {\n                return unpack(a)\n            } else if(a.substring(0,3) === 'bdr') {\n                return (\n                    <div key={i} className=\"card-sub-item\">\n                        {/* <a onClick={() => this.handleClick(a.split(\":\")[1])} href={a}>{a}</a> */}\n                        <a onClick={() => this.showModal(a.split(\":\")[1])} href={a}>{a}</a>\n                    </div> \n                )\n            } else {\n                return ( <div key={i} className=\"card-sub-item\">{a}</div>)\n            }\n            \n        })\n    } else if (typeof arr === 'object') {\n        // re-factor to allow for retreival of '@value' from any key\n        if(arr.hasOwnProperty('type')) { \n            return unpackNames(arr, arr.type) \n        } else {\n            return (\n                <p key={arr['@value']} className=\"modal-text\">\n                    <span className=\"meta-italics\">({arr['@language']}): </span>\n                    <span className=\"meta-title\">{arr['@value']}</span>\n                </p>\n               \n            )\n        }\n        \n    } else if (typeof arr === 'string') {\n        if(arr.substring(0,3) === 'bdr') {\n            return ( <a onClick={() => this.showModal(arr.split(\":\")[1])} href={arr}>{arr}</a> )\n        } else {\n            return arr\n        }\n        \n    }\n    \n}\n\nconst parseType = (source) => {\n    let { \n        'skos:prefLabel': label,\n        '@id': id,\n        type,\n        'workCatalogInfo': catalogInfo,\n        personName,\n        note\n    } = source\n\n    // set undefined to null for pre-render check\n    note !== undefined ? note = note.noteText : note = null\n\n    switch(type) {\n        case 'Person':  \n            return (\n                <div className=\"detail-data\">\n                    <p className=\"meta-detail\">\n                        <span>Detail for record {id}, </span>\n                        <span> {type}</span>\n                    </p>\n                    <div className=\"modal-title\">{ unpack(label) }</div>\n                    <div className=\"\">\n                        <span className=\"lead-item\">Name(s): </span>\n                        <span className=\"meta-catalog\">{ unpack(personName) }</span>\n                    </div>\n                </div>\n            )\n        case 'Topic':\n            return (\n                <div className=\"detail-data\">\n                    <p className=\"meta-detail\">\n                        <span>Detail for record {id}, </span>\n                        <span> {type}</span>\n                    </p>\n                    <div className=\"modal-title\">{ unpack(label) }</div>\n                    {note === null ? null : (\n                        <div className=\"meta-catalog\">Note: { note !== null ? unpack(note) : null }</div>\n                    )}\n                    \n                </div>\n            )\n        case 'Work':\n            return (\n                <div className=\"detail-data\">\n                    <p className=\"meta-detail\">\n                        <span>Detail for record {id}, </span>\n                        <span> {type}</span>\n                    </p>\n                    <div className=\"modal-title\">{ unpack(label) }</div>\n                    <div className=\"meta-catalog\">{ unpack(catalogInfo) }</div>\n                </div>\n            )\n        default:\n            return null\n    }\n}\n\nconst Modal = ({ workDetail, hideModal, doc_id, show }) => {\n    console.log('props from MODAL', workDetail)\n    \n    const showHideClassName = show ? 'modal display-block' : 'modal display-none';\n    let data\n    \n    if(Object.keys(workDetail).length > 0) {\n        data = parseType(workDetail._source)\n    } else {\n        data = <div>LOADING {doc_id}</div>\n    }\n    \n    return (\n        \n        <div className={showHideClassName}>\n            <section className='modal-main'>\n                {data}\n                <button onClick={hideModal}>Close</button>\n            </section>\n        </div>\n    )\n\n}\n\nexport default Modal\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchSpecificID } from '../actions'\n\nimport Modal from './Modal'\n\n/* of interest \n\n// ID & Category\n@id - bdr:...\ntype (Work, Person, Topic)\n\n// LINKS \ncreatorMainAuthor\nworkCreator\nworkGenre\nworkIsAbout (can be an array)\nworkHasPart (usually array)\n\n// For any of these, check the @language\n// TIBETAN bo-x-ewts\nnote.noteText['@value']\n['skos:prefLabel']['@value'] && ['@language']\nworkTitle['rdfs:label'] (can be an array)\n\n// ENGLISH (might be)\nworkBiblioNote\nworkCatalogInfo\n\n*/\nclass Archives extends Component {\n\n    showModal = (doc_id) => {\n        //fetchSpecificID(doc_id)\n        this.props.dispatch(fetchSpecificID(doc_id))\n        this.props.dispatch(\n            { type: 'DETAIL_MODAL', modalID: doc_id, show: true }\n        )\n    }\n\n    hideModal = () => {\n        //this.setState({ show: false });\n        this.props.dispatch({ type: 'DETAIL_MODAL', show: false})\n    }\n\n    unpackFrontend = (code, o) => {\n        if(code === 'P') {\n            let p = null\n            if(Array.isArray(o.data.personName)) {\n                p = o.data.personName.find(p => p.type === 'PersonPrimaryName');\n                p = p['rdfs:label']['@value']\n            }\n            //console.log('unpacking person', p)\n            return p\n        } else if(code === 'T') {\n            let g = null\n            if(Array.isArray(o.data['skos:prefLabel'])) {\n                g = o.data['skos:prefLabel'].find(g => g['@language'] === 'en')\n                g == null ? g = o.data['skos:prefLabel'].find(g => g['@language'] === 'bo-x-ewts') : g = g  \n                g = g['@value']  \n            } else if(typeof o.data['skos:prefLabel'] === 'object') {\n                g = o.data['skos:prefLabel']['@value']\n            }\n            //console.log('unpacking topic', g)\n            return g\n        } else if(code === 'W') {\n            console.log('I ended up in W', o)\n        } else {\n            return null\n        }\n    }\n\n    unpack = (arr) => {\n        if(arr === null || arr === undefined) {\n            return null\n        } else if(Array.isArray(arr)) {\n            return arr.map((a, i) => {\n                if(typeof a === 'object') {\n                    return this.unpack(a)\n                } else if(a.substring(0,3) === 'bdr') {\n                    return (\n                        <div key={i} className=\"card-sub-item\">\n                            {/* <a onClick={() => this.handleClick(a.split(\":\")[1])} href={a}>{a}</a> */}\n                            <a onClick={() => this.showModal(a.split(\":\")[1])} href={a}>{a}</a>\n                        </div> \n                    )\n                } else {\n                    return ( <div key={i} className=\"card-sub-item\">{a}</div>)\n                }\n                \n            })\n        } else if (typeof arr === 'object') {\n                if('key' in arr) {\n                    \n                    if(arr.data.hasOwnProperty('@id')) {\n                        return arr.data['@id']\n                    } \n                    else {\n                        return this.unpackFrontend(arr.code, arr)\n                    }        \n                } else if(arr.hasOwnProperty('@value')) {\n                    return arr['@value']\n                } else {\n                    return ( <span key={arr['rdfs:label']['@value']}>{arr['rdfs:label']['@value']}</span> )\n                }\n                \n        } else if (typeof arr === 'string') {\n                if(arr.substring(0,3) === 'bdr') {\n                    return ( <a onClick={() => this.showModal(arr.split(\":\")[1])} href={arr}>{arr}</a> )\n        } else {\n            return (\n                <span>{arr}</span>\n            )\n        }\n    }\n}\n\n    render() {\n        \n        const items = this.props.works.map((work, i) => {\n\n            const { \n                'skos:prefLabel': label,\n                '@id': id,\n                // 'creatorMainAuthor': author,\n                'workCreator': creator,\n                'workGenre': genre,\n                'workIsAbout': topic,\n                'workTitle': title,\n                'workHasPart': parts \n            } = work._source\n\n            const author = work._source.creatorMainAuthor !== undefined ? work._source.creatorMainAuthor : null \n            const authorCode = author !== null ? author.item : null\n            console.log('AUTHOR', author)\n\n            // CARD\n            return (\n                \n                <div key={i} className=\"card\">\n                    <div className=\"card-item\">\n                        <span className=\"item-work\"> \n                            { this.unpack(label) }\n                        </span>\n                    </div>\n\n                    {/* <div className=\"card-item\">\n                        <span className=\"item-lead\">Title:</span>\n                        <span> { this.unpack(title) }</span>\n                    </div> */}\n\n                    <div className=\"card-item\">\n                        <span className=\"item-lead\">Author: </span> \n                        <span className=\"item-btn\" onClick={() => this.showModal(authorCode)} href={authorCode}>\n                                { this.unpack(author) }\n                        </span>\n                    </div>\n                    <div className=\"card-item\">\n                        <span className=\"item-lead\">Genre:</span> \n                        <span> { this.unpack(genre) }</span>\n                    </div>\n                    <div className=\"card-item\">\n                        <span className=\"item-lead\">Topic:</span> \n                        <span> { this.unpack(topic) }</span>\n                    </div>\n                    \n\n                    <button onClick={() => this.showModal(id.item)}>\n                        More details...\n                    </button>\n\n                </div>\n            )\n        })\n        // GRID\n        return (\n            <div className=\"grid\">\n                {items}\n                <Modal \n                    key={this.props.doc_id}\n                    hideModal={this.hideModal} \n                    doc_id={this.props.doc_id} \n                    show={this.props.showModal} \n                    workDetail={this.props.workDetail}\n                />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    works: state.data.items.hits.hits,\n    workDetail: state.detailData.isFetching || state.detailModal.modalID === 0 ? {} : state.detailData.item.hits.hits[0],\n    doc_id: state.detailModal.modalID,\n    showModal: state.detailModal.show\n})\n\nexport default connect(mapStateToProps)(Archives)\n\n\n// const Archives = ({ works }) => {\n//     const items = works.map(work => {\n//         const { \n//             'skos:prefLabel': label,\n//             '@id': id,\n//             'creatorMainAuthor': author,\n//             'workCreator': creator,\n//             'workGenre': genre,\n//             'workIsAbout': topic,\n//             'workTitle': title\n//         } = work._source\n\n        \n//         // CARD\n//         return (\n//             <div key={id} className=\"card\">\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Title:</span>\n//                     <span> { unpack(title[0]) }</span>\n//                 </div>\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Author:</span> \n//                     <span> { unpack(author) }</span>\n//                 </div>\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Creator:</span> \n//                     <span> {unpack(creator) }</span>\n//                 </div>\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Genre(s):</span> \n//                     <span> {unpack(genre) }</span>\n//                 </div>\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Topic(s):</span> \n//                     <span> { unpack(topic) }</span>\n//                 </div>\n//                 <div className=\"card-item\">\n//                     <span className=\"item-lead\">Work:</span>\n//                     <span> { unpack(label['@value']) }</span>\n//                 </div>\n//             </div>\n//         )\n//     })\n//     // GRID\n//     return (\n//         <div className=\"grid\">{items}</div>\n//     )\n// }\n\n// const handleClick = ({ dispatch }, doc_id) => {\n//     console.log('clicked!', doc_id)\n//     dispatch({ type: 'DETAIL_MODAL' })\n// }\n// const unpack = (arr) => {\n//     if(arr === null) {\n//         return null\n//     } else if(Array.isArray(arr)) {\n//         return arr.map((a, i) => {\n//             if(a.substring(0,3) === 'bdr') {\n//                 return (\n//                     <div key={i} className=\"card-sub-item\">\n//                         <a onClick={() => handleClick(a.split(\":\")[1])} href={a}>{a}</a>\n//                     </div> \n//                 )\n//             } else {\n//                 return ( <div key={i} className=\"card-sub-item\">{a}</div>)\n//             }\n            \n//         })\n//     } else if (typeof arr === 'object') {\n//         // re-factor to allow for retreival of '@value' from any key\n//         return (\n//             arr['rdfs:label']['@value']\n//         )\n//     } else if (typeof arr === 'string') {\n//         if(arr.substring(0,3) === 'bdr') {\n//             return ( <a onClick={() => handleClick(arr.split(\":\")[1])} href={arr}>{arr}</a> )\n//         } else {\n//             return arr\n//         }\n        \n//     }\n    \n// }","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport Posts from './Posts'\nimport Archives from './Archives'\n\nclass Page extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.setNumber = {\n      0: 'one',\n      1: 'one',\n      2: 'two',\n      3: 'three',\n      4: 'four'\n    }\n\n  }\n\n  resetPage = () => {\n    this.props.dispatch({ type: 'SET_PAGE', page: 'home' });\n  }\n\n  renderPage(selectedPage, pages) {\n    if (!pages.some(e => e.slug.substring(0,4) === selectedPage)) {\n      console.log('page not there');\n      this.resetPage();\n    }\n    return pages\n      .filter(page => page.slug.substring(0,4) === selectedPage)\n      .map((page, i) => {\n        let mediaURL = null\n        if(page._embedded[\"wp:featuredmedia\"]) {\n          mediaURL = page._embedded[\"wp:featuredmedia\"][0].source_url\n        }\n        return (\n          <div key={page.slug}>\n          <section \n            id=\"banner\" \n            key={page.id}\n            style={{\n              backgroundImage: \n                `linear-gradient(to bottom, \n                  rgba(239, 239, 239,0.1) 50%,\n                  rgba(239, 239, 239,1.0) 100%), \n                  url(${mediaURL})`\n              //backgroundImage: `url(${mediaURL}`\n            }}>\n            <header className=\"major\">\n              <span className=\"icon fa-angellist style7\"></span>\n              <h1>{page.acf.title}</h1>\n              <h3>{page.acf.subtitle}</h3>\n            </header>\n            <ul className=\"actions\">\n              <li><a href=\"#1\" className=\"button scrolly\">Proceed</a></li>\n            </ul>\n          </section>\n          {selectedPage === 'home' ? null : \n          <section className={`wrapper special style1`}>\n            <div className=\"inner-page\">\n                <section className=\"spotlights\">\n                  <p dangerouslySetInnerHTML={{__html: page.content.rendered}} />\n                  {/* <ul className=\"actions\">\n                    <li>{page.acf.subtitle}</li>\n                  </ul> */}\n                </section>\n            </div>\n          </section>\n          }\n          </div>\n        )\n    })\n  }\n\n  render() {\n   \n    if(this.props.fetchingPages || this.props.fetchingPosts) {\n        return (\n          <div>LOADING</div>\n        );\n    }\n    return (\n      <div className=\"container\">\n        <Header />\n        \n        { this.renderPage(this.props.selectedPage, this.props.pages, this.props.meowPage) }\n        { this.props.selectedPage === 'home' ? <Posts /> : null }\n        { this.props.selectedPage === 'arch' ? <Archives /> : null }\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  fetchingPages: state.pages.isFetching,\n  selectedLanguage: state.selectedLanguage,\n  selectedPage: \n    state.pages.isFetching ? \n    [] : \n    state.pages.items[state.selectedLanguage].some(page => page.slug.substring(0,4) === state.selectedPage) ? \n    state.selectedPage : \"home\",\n  pages: state.pages.isFetching ? [] : state.pages.items[state.selectedLanguage]\n});\n\nexport default connect(mapStateToProps)(Page);","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\n\n//import { connect } from 'react-redux';\n\nimport Page from './components/Page';\n\n// const componentRoutes = {\n//     component: Home,\n//     path: '/',\n//     indexRoute: { component: WPPosts },\n//     childRoutes: [\n//         {\n//             path: ''\n//         }\n//     ]\n// }\n\nconst Routes = () => {\n    \n    // const nav = navigation.map(n => {\n    //     return (\n    //         <Route path=\"/{n}\" />\n    //     );\n    // });\n    \n    \n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Page} />\n                <Route path=\"/:page\" component={Page} />\n            </Switch>\n        </Router>\n    )\n};\n\n// const createNavigation = (pages) => {\n//     return pages.items.map(c => {\n//         return { slug: c.slug }\n//       });\n// }\n\n// const mapStateToProps = (state) => ({\n//     navigation: state.pagesByLanguage[state.language].items.map(s => s.slug)\n// })\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk'\n\nimport { fetchPages, fetchPosts, fetchData } from './actions'\nimport rootReducer from './reducers'\n\nimport Routes from './router'\n\nimport { checkConnection } from './server/connection'\n\nimport './assets/css/main.css'\nimport './assets/css/index.css'\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n    rootReducer, \n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);\nstore.dispatch(fetchPages())\nstore.dispatch(fetchPosts())\n        //.then(() => console.log(store.getState()));\nstore.dispatch(fetchData())\n\ncheckConnection()\n\nconst App = () => {\n    document.body.classList.add('landing');\n    return (\n        <Provider store={store}>\n            <Routes />\n        </Provider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}